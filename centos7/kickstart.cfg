# See Kickstart Options documentation
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html#sect-kickstart-commands

auth --useshadow
bootloader
clearpart --all --initlabel
firewall --disabled
keyboard us
lang en_US
network --bootproto=dhcp
part / --fstype xfs --size 1 --grow
part swap --fstype swap --size=2048
repo --name=epel-release --baseurl=http://dl.fedoraproject.org/pub/epel/7/x86_64/
selinux --disabled
text
timezone --utc UTC
url --url http://mirrors.kernel.org/centos/7/os/x86_64/

# Vagrant doesn't actually use or expect any root password. However, having a 
# generally well known root password makes it easier for the general public to
# modify the machine if needed. Publicly available base boxes usually use a 
# root password of "vagrant" to keep things easy.
rootpw vagrant

# By default, Vagrant expects a "vagrant" user to SSH into the machine as. Even
# though Vagrant uses key-based authentication by default, it is a general 
# convention to set the password for the "vagrant" user to "vagrant". This lets
# people login as that user manually if they need to.
user --name=vagrant --password=vagrant
reboot

%packages
@core
epel-release
%end

%post --interpreter=/usr/bin/bash
# Update all packages
yum --assumeyes update

# Clean up
yum --assumeyes clean all

# The vagrant user should be setup with the insecure keypair that Vagrant uses 
# as a default to attempt to SSH. To configure SSH access with the insecure 
# keypair, place the public key into the ~/.ssh/authorized_keys file for the 
# "vagrant" user. Note that OpenSSH is very picky about file permissions. 
# Therefore, make sure that ~/.ssh has 0700 permissions and the authorized keys
# file has 0600 permissions. When Vagrant boots a box and detects the insecure 
# keypair, it will automatically replace it with a randomly generated keypair 
# for additional security while the box is running.
vagrant_insecure_public_key_url='https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub'
sudo --user vagrant --set-home /usr/bin/bash -c \
"\
mkdir --parents ~/.ssh; \
curl ${vagrant_insecure_public_key_url} -o ~/.ssh/authorized_keys; \
chmod 0700 ~/.ssh; \
chmod 0600 ~/.ssh/authorized_keys \
"

# Vagrant doesn't use a pty or tty by default when connected via SSH. You'll 
# need to make sure there is no line that has requiretty in it. Remove that 
# if it exists. This allows sudo to work properly without a tty.
sed --in-place --regexp-extended "s/^Defaults\s+requiretty/#Defaults    requiretty/g" /etc/sudoers

# Many aspects of Vagrant expect the default SSH user to have passwordless sudo
# configured. This lets Vagrant configure networks, mount synced folders, 
# install software, and more.
echo 'vagrant ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/vagrant

# In order to keep SSH speedy even when your machine or the Vagrant machine is 
# not connected to the internet, set the UseDNS configuration to no in the SSH 
# server configuration. This avoids a reverse DNS lookup on the connecting SSH 
# client which can take many seconds.
use_dns_yes_regexp='^UseDNS\s+yes'
sshd_config_file='/etc/ssh/sshd_config'
if grep --extended-regexp ${use_dns_yes_regexp} ${sshd_config_file}; then
    sed --in-place --regexp-extended "s/${use_dns_yes_regexp}/UseDNS no/g" ${sshd_config_file}
else
    echo "UseDNS no" >> ${sshd_config_file}
fi

%end
